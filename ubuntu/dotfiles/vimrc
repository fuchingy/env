""" Disable vi compatible features
set nocompatible

"----------------------------------------------------------------
" vim-plug management
"----------------------------------------------------------------
" To install vim-plug, follow below instructions:
"   > curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
"       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
" In vim, execute
"   > :PlugInstall

call plug#begin('~/.vim/plugged')
" nerdtree
Plug 'scrooloose/nerdtree'
" markdown highlight
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
"shows a git diff in the 'gutter' (sign column)
Plug 'airblade/vim-gitgutter'
"A Git wrapper so awesome
Plug 'tpope/vim-fugitive'
"Scala syntax
Plug 'derekwyatt/vim-scala'
"Enhanced marks
Plug 'kshenoy/vim-signature'
"Aligning text, e.g., csv
Plug 'godlygeek/tabular'
call plug#end()

"----------------------------------------------------------------
" Plugin Setting
"----------------------------------------------------------------
" nerdtree
nnoremap <silent> <F5> :NERDTreeToggle<CR>
nnoremap <silent> <F6> :NERDTreeFind<CR>
let NERDTreeWinPos="left"
let NERDTreeShowBookmarks=1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeQuitOnOpen = 1
let NERDTreeBookmarksFile=expand("$HOME/.vim-NERDTreeBookmarks")
" vim-markdown
filetype plugin on
let g:vim_markdown_folding_disabled = 1  "Disable folding
" vim-gitgutter
set updatetime=100
nnoremap <silent> <F1> :GitGutterToggle<CR>
" vim-fugitive
":Gblame

"----------------------------------------------------------------
" Important
"----------------------------------------------------------------
" Set leader key
let mapleader = ","
let g:mapleader = ","

"----------------------------------------------------------------
" Locale
"----------------------------------------------------------------
set encoding=utf8
try
    lang en_US
catch
endtry

"----------------------------------------------------------------
" Appearance
"----------------------------------------------------------------
syntax enable
set ruler

" Do tab completion for file names more like bash
set wildmode=list:longest
set wildignore+=*.pyc,*.pyo,.svn,.git,.bzr,

" Default indentation.
set expandtab
set shiftwidth=4
set softtabstop=4
set noautoindent
set nocindent

" Search without moving cursor
nnoremap * :let @/ = '\<'.expand('<cword>').'\>'\|set hlsearch<C-M>

" Status line
set laststatus=2
set statusline+=%F

" Set hexmode
let hexmode = 0
map <leader>x  :%!xxd <cr>
map <leader>nx :%!xxd -r<cr>

" Highlight color
hi Search ctermfg=Black ctermbg=Yellow
hi Visual cterm=NONE ctermbg=DarkGrey

" Highlight my own keyword
match Error /FC:\|FC?:/

"Cursor mode
"
"  1 -> blinking block
"  2 -> solid block
"  3 -> blinking underscore
"  4 -> solid underscore
"  5 -> blinking vertical bar
"  6 -> solid vertical bar
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)

highlight DiffAdd    cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffDelete cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffChange cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffText   cterm=bold ctermfg=10 ctermbg=88 gui=none guifg=bg guibg=Red

"----------------------------------------------------------------
" Key
"----------------------------------------------------------------
" Fix backspace delete
set backspace=indent,eol,start

" Line number toggle
:noremap <F3> :set number! number?<CR>
:noremap <F7> :set relativenumber! relativenumber?<CR>

" Searching highlight toggle
set hlsearch
hi Search ctermfg=Black ctermbg=Yellow
:noremap <F4> :set hlsearch! hlsearch?<CR>

" Remove arrow key to force hjkl adoption
inoremap jk <esc>
nnoremap <Up> <nop>
nnoremap <Down> <nop>
nnoremap <Left> <nop>
nnoremap <Right> <nop>
inoremap <esc> <nop>

" Switch tab
nnoremap gt <nop>
nnoremap gT <nop>
nnoremap <C-l> :tabn<CR>
nnoremap <C-h> :tabp<CR>

" Draw a line for line-length coding style
fun! ToggleCC()
  if &cc == ''
    set cc=80
  else
    set cc=
  endif
endfun

nnoremap <F2> :call ToggleCC()<CR>

"----------------------------------------------------------------
" Layout
"----------------------------------------------------------------
set splitright

"----------------------------------------------------------------
" For mouse mode to work in tmux
"----------------------------------------------------------------
set ttymouse=xterm2

"----------------------------------------------------------------
" Performance
"----------------------------------------------------------------
" Avoid connect to X server to reduce vim start-up time
set clipboard=exclude:.*

" Fix paste bug triggered by the inoremaps
set t_BE=

"----------------------------------------------------------------
" Features
"----------------------------------------------------------------
" Increase the max tab when using '-p'
set tabpagemax=100
